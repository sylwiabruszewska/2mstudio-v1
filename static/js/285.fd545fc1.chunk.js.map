{"version":3,"file":"static/js/285.fd545fc1.chunk.js","mappings":"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","sources":["helpers/getImages.js","webpack://2mstudio-v1/./src/pages/BlogPage/BlogPage.module.scss?848f","pages/BlogPage/BlogPage.jsx","config.js","services/api.js"],"sourcesContent":["import { fetchImages } from '../services/api';\nimport defaultImage from '../assets/images/photo-home.jpg';\n\nexport const getImages = async (posts, imgState, setImgState) => {\n  if (!posts) {\n    return;\n  }\n\n  try {\n    const updatedImgState = { ...imgState };\n\n    for (const post of posts) {\n      if (\n        post.featured_media !== null &&\n        !updatedImgState[post.featured_media]\n      ) {\n        try {\n          const mediaData = await fetchImages(post.featured_media);\n          updatedImgState[post.featured_media] = mediaData.source_url;\n        } catch (error) {\n          console.error(\n            'There was a problem fetching media for post:',\n            post.id,\n            error\n          );\n          updatedImgState[post.featured_media] = defaultImage;\n        }\n      } else if (\n        post.featured_media !== null &&\n        !updatedImgState[post.featured_media]\n      ) {\n        updatedImgState[post.featured_media] = defaultImage;\n      }\n    }\n\n    setImgState(updatedImgState);\n  } catch (error) {\n    console.error('There was a problem updating images state:', error);\n  }\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"blog-list\":\"BlogPage_blog-list__FhnfV\",\"blog-post\":\"BlogPage_blog-post__4Rp8X\",\"blog-card\":\"BlogPage_blog-card__Yx2Dp\",\"box\":\"BlogPage_box__+pPxV\",\"post-img\":\"BlogPage_post-img__C6DEb\",\"blog-date\":\"BlogPage_blog-date__WTLjp\",\"blog-title\":\"BlogPage_blog-title__k+MSP\",\"blog-excerpt\":\"BlogPage_blog-excerpt__btwjq\",\"overlay\":\"BlogPage_overlay__QkxZR\",\"btn-group\":\"BlogPage_btn-group__0U9TC\",\"btn-pag\":\"BlogPage_btn-pag__4ry92\"};","import { Helmet } from 'react-helmet';\nimport { useEffect, useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\n\nimport styles from './BlogPage.module.scss';\nimport { Section, Container, Button } from 'components';\nimport { getImages } from '../../helpers/getImages';\nimport { getBlogPosts } from '../../services/api';\nimport { setIsLoading } from '../../redux/global/globalSlice';\n\nconst BlogPage = () => {\n  const [posts, setPosts] = useState();\n  const [featuredImages, setFeaturedImages] = useState({});\n  const [currentPage, setCurrentPage] = useState(1);\n  const [lastPageBlog, setLastPageBlog] = useState(null);\n  const dispatch = useDispatch();\n  const location = useLocation();\n\n  useEffect(() => {\n    fetchData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentPage]);\n\n  useEffect(() => {\n    const queryParams = new URLSearchParams(location.search);\n    const page = parseInt(queryParams.get('page') || '1');\n    setCurrentPage(page);\n  }, [location]);\n\n  const goToNextPage = () => {\n    const nextPage = currentPage + 1;\n    setCurrentPage(nextPage);\n    updateURL(nextPage);\n  };\n\n  const goToPrevPage = () => {\n    const prevPage = currentPage - 1;\n    setCurrentPage(prevPage);\n    updateURL(prevPage);\n  };\n\n  const updateURL = page => {\n    const queryParams = new URLSearchParams(location.search);\n    queryParams.set('page', page);\n    const newURL = `${location.pathname}?${queryParams.toString()}`;\n    window.history.pushState({}, '', newURL);\n  };\n\n  const fetchData = async () => {\n    dispatch(setIsLoading(true));\n    try {\n      const { posts, lastPage } = await getBlogPosts(currentPage);\n\n      setPosts(posts);\n\n      if (lastPageBlog === null) {\n        setLastPageBlog(lastPage);\n      }\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    } finally {\n      dispatch(setIsLoading(false));\n    }\n  };\n\n  useEffect(() => {\n    getImages(posts, featuredImages, setFeaturedImages, getImages);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [posts]);\n\n  return (\n    <>\n      <Helmet>\n        <title>2m Studio Pracownia Projektowa - Portfolio - Blog</title>\n      </Helmet>\n\n      <Section>\n        <Container>\n          <div className={styles['blog-list']}>\n            {posts &&\n              posts.map(post => (\n                <article key={post.id} className={styles['blog-card']}>\n                  <div className={styles['blog-post']}>\n                    <Link to={`/${post.id}`}>\n                      <p className={styles['blog-date']}>\n                        {new Date(post.date).toLocaleDateString('pl-PL', {\n                          year: 'numeric',\n                          month: 'long',\n                          day: 'numeric',\n                        })}\n                      </p>\n                      <h2 className={styles['blog-title']}>\n                        {post.title.rendered}\n                      </h2>\n                      <p\n                        className=\"blog-excerpt\"\n                        dangerouslySetInnerHTML={{\n                          __html: post.excerpt.rendered,\n                        }}\n                      />\n                    </Link>\n                  </div>\n                  <div className={styles['overlay']}>\n                    <Link to={`/${post.id}`}>\n                      {post.featured_media !== 0 &&\n                        featuredImages[post.featured_media] && (\n                          <div>\n                            <img\n                              src={featuredImages[post.featured_media]}\n                              alt={post.title.rendered}\n                              className={styles['post-img']}\n                            />\n\n                            <div className={styles['box']}>zobacz post</div>\n                          </div>\n                        )}\n                    </Link>\n                  </div>\n                </article>\n              ))}\n          </div>\n          <div className={styles['btn-group']}>\n            <div>\n              {posts && currentPage > 1 && (\n                <Button className={styles['btn-pag']} onClick={goToPrevPage}>\n                  Poprzednia strona\n                </Button>\n              )}\n            </div>\n            <div>\n              {currentPage < lastPageBlog && posts && (\n                <Button className={styles['btn-pag']} onClick={goToNextPage}>\n                  Następna strona\n                </Button>\n              )}\n            </div>\n          </div>\n        </Container>\n      </Section>\n    </>\n  );\n};\n\nexport default BlogPage;\n","// config.js\nexport const BASE_URL = 'https://www.2mstudio.org.pl/wordpress/wp-json/wp/v2/';\n\nexport const API_PATHS = {\n  post: 'posts',\n  blog: 'posts?categories=5',\n  portfolioInterior: 'posts?categories=16',\n  portoflioBuildingsResidential: 'posts?categories=17',\n  portoflioBuildingsIndustrial: 'posts?categories=18',\n  portoflioBuildingsCommercial: 'posts?categories=19',\n  media: 'media/',\n  aboutUs: 'pages/112',\n};\n","import axios from 'axios';\nimport { BASE_URL, API_PATHS } from '../config.js';\n\naxios.defaults.baseURL = BASE_URL;\n\nexport const fetchData = async path => {\n  try {\n    const response = await axios.get(`${BASE_URL}${path}`, {\n      headers: {\n        accept: 'application/json',\n      },\n    });\n\n    if (response.status === 200) {\n      return response.data;\n    } else {\n      throw new Error('Network response was not ok');\n    }\n  } catch (error) {\n    console.error('An error occurred while fetching data:', error);\n    throw error;\n  }\n};\n\nexport const getPost = async postId => {\n  const post = await fetchData(`${API_PATHS.post}/${postId}`);\n  return post;\n};\n\nexport const getBlogPosts = async (page, perPage = 6) => {\n  const apiUrl = `${API_PATHS.blog}&page=${page}&per_page=${perPage}`;\n  try {\n    const response = await axios.get(apiUrl, {\n      headers: {\n        accept: 'application/json',\n      },\n    });\n\n    if (response.status === 200) {\n      const totalPostsHeader = response.headers['x-wp-total'];\n      const posts = response.data;\n\n      const lastPage = Math.ceil(parseInt(totalPostsHeader) / perPage);\n\n      return { posts, lastPage };\n    } else {\n      throw new Error('Network response was not ok');\n    }\n  } catch (error) {\n    console.error('An error occurred while fetching blog posts:', error);\n    throw error;\n  }\n};\n\nexport const getPortfolioInterior = async () => {\n  const projects = await fetchData(API_PATHS.portfolioInterior);\n  return projects;\n};\n\nexport const getPortoflioBuildingsResidential = async () => {\n  const projects = await fetchData(API_PATHS.portoflioBuildingsResidential);\n  return projects;\n};\n\nexport const getPortoflioBuildingsIndustrial = async () => {\n  const projects = await fetchData(API_PATHS.portoflioBuildingsIndustrial);\n  return projects;\n};\n\nexport const getPortoflioBuildingsCommercial = async () => {\n  const projects = await fetchData(API_PATHS.portoflioBuildingsCommercial);\n  return projects;\n};\n\nexport const getAboutUsInfo = async () => {\n  const data = await fetchData(API_PATHS.aboutUs);\n  return data;\n};\n\nexport const fetchImages = async mediaId => {\n  try {\n    const response = await axios.get(`${API_PATHS.media}${mediaId}`);\n\n    if (response.status !== 200) {\n      throw new Error('Network response was not ok');\n    }\n\n    const images = response.data;\n    return images;\n  } catch (error) {\n    console.error('There was a problem fetching the media:', error);\n    throw error;\n  }\n};\n"],"names":["getImages","async","posts","imgState","setImgState","updatedImgState","post","featured_media","defaultImage","mediaData","fetchImages","source_url","error","console","id","BlogPage","setPosts","useState","featuredImages","setFeaturedImages","currentPage","setCurrentPage","lastPageBlog","setLastPageBlog","dispatch","useDispatch","location","useLocation","useEffect","fetchData","queryParams","URLSearchParams","search","page","parseInt","get","updateURL","set","newURL","concat","pathname","toString","window","history","pushState","setIsLoading","lastPage","getBlogPosts","_jsxs","_Fragment","children","_jsx","Helmet","Section","Container","className","styles","map","Link","to","Date","date","toLocaleDateString","year","month","day","title","rendered","dangerouslySetInnerHTML","__html","excerpt","src","alt","Button","onClick","goToPrevPage","prevPage","goToNextPage","nextPage","BASE_URL","API_PATHS","axios","defaults","baseURL","response","path","headers","accept","status","data","Error","getPost","postId","perPage","arguments","length","undefined","apiUrl","totalPostsHeader","Math","ceil","getPortfolioInterior","getPortoflioBuildingsResidential","getPortoflioBuildingsIndustrial","getPortoflioBuildingsCommercial","getAboutUsInfo","mediaId"],"sourceRoot":""}